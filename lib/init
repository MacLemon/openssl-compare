#!/usr/bin/env bash
#
# Download, build and compare OpenSSL versions for testing, fuzzing [...] 
#

source lib/common.inc

function verify_tarballs() {
	# OpenSSL fact: improper use of md5sum. you cannot mass verify tarballs
	# http://nopaste.narf.at/show/DL0GE8RcTKH0BZO3vLux/
	for file in work/*.tar.gz; do
		if [ ! -f ${file}.md5 ]; then
			echo -e "\t${file}: $(bold "NO MD5 SIGNATURE")"
			continue
		fi
		local sum_local=$(md5check ${file})
		local sum_remote=$(cat ${file}.md5 2>/dev/null | sed 's/.*=\ //')
		echo -ne "\t${file}: "
		if [[ ${sum_local} == ${sum_remote} ]]; then
			echo "$(bold verified)"
		else
			echo "$(bold NOT) matching"
		fi 
	done
}

function extract_tarballs() {
        for file in work/*.tar.gz; do
                echo -ne "\textracting: ${file}"
		tar xfiz ${file} -C "work/" || fail "could not extract ${file}"
		echo -e "\t\t$(bold DONE)"
	done
}

while getopts ":h" opts; do
	case ${opts} in
		w)	wipe=true ;;
		?|h) 
			echo -e "  Usage: ./init [-w]\n"
			echo -e "\t Options:"
			echo -e "\t -w\t Wipe (remove) all build dirs"
			echo ; exit 1
		;;
	esac
done

if [ ${wipe} ]; then
	rm -rf "work/" || fail "could not remove 'work/'"
	exit
fi

if [ ! -d "work/" ]; then
	mkdir -p "work/" || fail "could not create 'work/' directory"
fi

echo "${banner} downloading all OpenSSL sources - this might take a while"

if command -v wget >/dev/null 2>&1 ; then
	wget -r -l2 -nd -Nc -A "*.tar.gz" -A "*.md5" -P "work/" \
		"https://www.openssl.org/source" &>/dev/null || fail "could not download OpenSSL"	
elif command -v curl >/dev/null 2>&1 ; then
	# Yes, this is ugly
	cd work && curl -s 'https://www.openssl.org/source/' | grep .tar.gz | sed -e 's/^.*href=\"/https\:\/\/www\.openssl\.org\/source\//g' -e 's/\.tar\.gz.*/\.tar\.gz/g' | uniq | while read url; do curl -LO -# -R -C - "{$url}" -LO -# -R -C - "{$url}.md5" ; done ; cd ..
else
	fail "Could't find wget or curl to fetch sources."
	exit 1
fi


echo "${banner} verifying tarballs:"
verify_tarballs

echo "${banner} extracting tarballs:"
extract_tarballs

echo "${banner} done."

